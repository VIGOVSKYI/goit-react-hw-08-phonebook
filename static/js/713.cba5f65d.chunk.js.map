{"version":3,"file":"static/js/713.cba5f65d.chunk.js","mappings":"oLACA,MAA0B,2BAA1B,EAA6D,yBAA7D,EAA8F,yBCA9F,EAA2B,+BCA3B,EAAqB,wBAArB,EAAsD,4B,uCC8BtD,EAzBoB,SAAC,GAAyB,IAAvBA,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACzBC,GAAWC,EAAAA,EAAAA,MAEXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAK9B,OACE,gBAAIC,UAAWC,EAAf,WACE,yBACGR,EADH,KACWC,MAEX,mBACEM,UAAWC,EACXC,KAAK,SACLC,QAAS,kBAZE,SAAAX,GACfG,GAASS,EAAAA,EAAAA,IAAcZ,GACxB,CAUoBa,CAASb,EAAf,EACTc,SAAUT,EAJZ,sBAUL,ECZD,EAXqB,WACnB,IAAMU,GAAmBT,EAAAA,EAAAA,IAAYU,EAAAA,IACrC,OACE,eAAIR,UAAWC,EAAf,SACGM,EAAiBE,KAAI,YAA2B,IAAxBjB,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,KAAMiB,EAAa,EAAbA,OACjC,OAAO,SAAC,EAAD,CAAsBjB,KAAMA,EAAMC,MAAOgB,EAAQlB,GAAIA,GAAnCA,EAC1B,KAGN,ECdD,EAA4B,wBAA5B,EAA6D,qBAA7D,EAA0F,oB,UCqC1F,EAhCgB,WACd,IAAMG,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAW9B,OACE,SAAC,KAAD,CAAQY,cAXY,CACpBlB,KAAM,GACNiB,OAAQ,IAS8BE,SANf,SAACC,EAAD,GAA6B,IAAjBC,EAAgB,EAAhBA,UACnCnB,GAASoB,EAAAA,EAAAA,IAAWF,IACpBC,GACD,EAGC,UACE,UAAC,KAAD,CAAMd,UAAWC,EAAjB,WACE,8BACE,iCACA,SAAC,KAAD,CAAOD,UAAWC,EAAcC,KAAK,OAAOT,KAAK,aAEnD,8BACE,mCACA,SAAC,KAAD,CAAOO,UAAWC,EAAcC,KAAK,MAAMT,KAAK,eAElD,mBAAQO,UAAWC,EAAeC,KAAK,SAASI,SAAUT,EAA1D,6BAMP,E,UCnCD,EAAwB,sBC4BtB,EAxBa,WACb,IAAMF,GAAWC,EAAAA,EAAAA,MACXoB,GAAQlB,EAAAA,EAAAA,IAAYmB,EAAAA,IAMxB,OACE,4BACE,kBACEjB,UAAWC,EACXC,KAAK,OACLT,KAAK,OACLyB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRJ,MAAOA,EACPK,SAda,SAAAC,GACnB3B,GAAS4B,EAAAA,EAAAA,GAAaD,EAAEE,cAAcR,OACvC,KAgBA,E,UCnBY,SAASS,IACtB,IAAM9B,GAAWC,EAAAA,EAAAA,MAKjB,OAHA8B,EAAAA,EAAAA,YAAU,WACR/B,GAASgC,EAAAA,EAAAA,MACV,GAAE,CAAChC,KAEA,gBAAKK,UAAWC,EAAhB,UACA,iBAAKD,UAAWC,EAAhB,WACE,iBAAKD,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,mBACA,SAAC,EAAD,QAEF,iBAAKD,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,uBACA,SAAC,EAAD,KACA,SAAC,EAAD,WAKT,CC3BD,IAIA,EAJsB,WACpB,OAAO,SAACwB,EAAD,GACR,C","sources":["webpack://react-homework-template/./src/components/Phonebook.module.css?8f1e","webpack://react-homework-template/./src/components/ContactsList/ContactsList.module.css?d8e9","webpack://react-homework-template/./src/components/ContactsList/ContactItem/ContactItem.module.css?a943","components/ContactsList/ContactItem/ContactItem.jsx","components/ContactsList/ContactsList.jsx","webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","webpack://react-homework-template/./src/components/Filter/filter.module.css?e01c","components/Filter/Filter.jsx","components/Phonebook.jsx","pages/PhonebookPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Phonebook_wrapper__ESG5Q\",\"block\":\"Phonebook_block__-ad94\",\"title\":\"Phonebook_title__yyhz0\"};","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"ContactsList_contacts__gnzMi\"};","// extracted by mini-css-extract-plugin\nexport default {\"li\":\"ContactItem_li__eBeZe\",\"button\":\"ContactItem_button__R571M\"};","import styles from './ContactItem.module.css';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contactsOperations';\nimport { getIsLoading } from '../../../redux/selectors';\n\nconst ContactItem = ({ id, name, phone }) => {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(getIsLoading);\n  const onDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <li className={styles.li}>\n      <p>\n        {name}: {phone}\n      </p>\n      <button\n        className={styles.button}\n        type=\"button\"\n        onClick={() => onDelete(id)}\n        disabled={isLoading}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};","import styles from './ContactsList.module.css';\nimport ContactItem from './ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport { getFilteredContacts } from '../../redux/selectors';\n\n\nconst ContactsList = () => {\n  const filteredContacts = useSelector(getFilteredContacts);\n  return (\n    <ul className={styles.contacts}>\n      {filteredContacts.map(({ id, name, number }) => {\n        return <ContactItem key={id} name={name} phone={number} id={id} />;\n      })}\n    </ul>\n  );\n};\n\nexport default ContactsList;\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebook\":\"Form_phonebook__WX2fE\",\"button\":\"Form_button__8NOIT\",\"input\":\"Form_input__FTtTw\"};","import styles from './Form.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contactsOperations';\nimport { Formik, Form, Field } from 'formik';\nimport { getIsLoading } from 'redux/selectors';\n\nconst AddForm = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const initialValues = {\n    name: '',\n    number: '',\n  };\n\n  const handleFormSubmit = (contact, { resetForm }) => {\n    dispatch(addContact(contact));\n    resetForm();\n  };\n\n  return (\n    <Formik initialValues={initialValues} onSubmit={handleFormSubmit}>\n      <Form className={styles.phonebook}>\n        <label>\n          <p>Name</p>\n          <Field className={styles.input} type=\"text\" name=\"name\" />\n        </label>\n        <label>\n          <p>Number</p>\n          <Field className={styles.input} type=\"tel\" name=\"number\" />\n        </label>\n        <button className={styles.button} type=\"submit\" disabled={isLoading}>\n          Add contact\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default AddForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"filter_input__sX944\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { filterChange } from 'redux/filtersSlice';\nimport { getFilter } from 'redux/selectors';\nimport styles from \"./filter.module.css\";\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(getFilter);\n\n  const handleFilter = e => {\n    dispatch(filterChange(e.currentTarget.value));\n  };\n\n    return (\n      <label>\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={value}\n          onChange={handleFilter}\n        />\n      </label>\n    );\n  };\n  \n  export default Filter;","import styles from './Phonebook.module.css';\nimport ContactsList from './ContactsList/ContactsList';\nimport AddForm from './Form/Form';\nimport Filter from './Filter/Filter';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../redux/contactsOperations';\n\nexport default function Phonebook() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n      <div className={styles.wrapper}>\n      <div className={styles.wrapper}>\n        <div className={styles.block}>\n          <h4 className={styles.title}>Name</h4>\n          <AddForm />\n        </div>\n        <div className={styles.block}>\n          <h4 className={styles.title}>Contacts</h4>\n          <Filter />\n          <ContactsList />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import Phonebook from '../components/Phonebook';\n\nconst PhonebookPage = () => {\n  return <Phonebook />;\n};\n\nexport default PhonebookPage;"],"names":["id","name","phone","dispatch","useDispatch","isLoading","useSelector","getIsLoading","className","styles","type","onClick","deleteContact","onDelete","disabled","filteredContacts","getFilteredContacts","map","number","initialValues","onSubmit","contact","resetForm","addContact","value","getFilter","pattern","title","required","onChange","e","filterChange","currentTarget","Phonebook","useEffect","fetchContacts"],"sourceRoot":""}