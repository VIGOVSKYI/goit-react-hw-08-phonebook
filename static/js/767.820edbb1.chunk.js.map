{"version":3,"file":"static/js/767.820edbb1.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MyContactList/my-contact-list.module.css?405f","components/MyContactList/MyContactList.jsx","webpack://react-homework-template/./src/components/MycontactFilter/my-contact-filter.module.css?3988","components/MycontactFilter/MyContactFilter.jsx","webpack://react-homework-template/./src/components/MyContcatForm/my-contact-form.module.css?f5c5","components/MyContcatForm/MyContactForm.jsx","redux/contacts/contacts-selectors.js","redux/filter/filter-selectors.js","webpack://react-homework-template/./src/components/MyContacts/my-contacts.module.css?4f12","components/MyContacts/MyContacts.jsx","page/MyContactsPage/MyContactsPage.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"my-contact-list_item__nB3PH\",\"btn\":\"my-contact-list_btn__3qYuQ\"};","import PropTypes from 'prop-types';\n\nimport styles from './my-contact-list.module.css';\n\nconst MyContactList = ({ deleteContact, contacts }) => {\n  console.log(contacts)\n  const items = contacts.map(({ _id, name, phone }) => (\n    <li key={ _id } className={styles.item}>\n      {name}: {phone}\n      <button onClick={() => deleteContact(_id)} className={styles.btn}>\n        Delete\n      </button>\n    </li>\n  ));\n  return <ul>{items}</ul>;\n};\n\nexport default MyContactList;\n\nMyContactList.defaultProps = {\n  contacts: [],\n};\n\nMyContactList.prototypes = {\n  onClick: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"my-contact-filter_input__UpVbo\",\"formGroup\":\"my-contact-filter_formGroup__cCgh9\"};","import PropTypes from 'prop-types';\n\nimport styles from './my-contact-filter.module.css';\n\nconst MyContactFilter = ({ handlFilter, value }) => {\n  return (\n    <div className={styles.formGroup}>\n      <input\n        value={value}\n        onChange={handlFilter}\n        className={styles.input}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n    </div>\n  );\n};\n\nexport default MyContactFilter;\n\nMyContactFilter.prototypes = {\n  handlFilter: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formGroup\":\"my-contact-form_formGroup__uopK4\",\"input\":\"my-contact-form_input__fmH4z\",\"btn\":\"my-contact-form_btn__aaHKj\"};","import { useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport styles from './my-contact-form.module.css';\n\nconst MyContactForm = ({ onSubmit }) => {\n  const [state, setState] = useState({\n    name: '',\n    phone: '',\n  });\n\n  const handlSubmit = e => {\n    e.preventDefault();\n    const { name, phone } = state;\n    onSubmit({ name, phone });\n    setState({\n      name: '',\n      phone: '',\n    });\n  };\n\n  const handlChange = ({ target }) => {\n    const { name, value } = target;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  return (\n    <form action=\"\" onSubmit={handlSubmit}>\n      <div className={styles.formGroup}>\n        <input\n          type=\"text\"\n          value={state.name}\n          name=\"name\"\n          onChange={handlChange}\n          className={styles.input}\n          placeholder=\"Name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </div>\n      <div className={styles.formGroup}>\n        <input\n          onChange={handlChange}\n          value={state.phone}\n          className={styles.input}\n          type=\"tel\"\n          name=\"phone\"\n          placeholder=\"Phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </div>\n      <button className={styles.btn}>Add contact</button>\n    </form>\n  );\n};\n\nexport default MyContactForm;\n\nMyContactForm.prototypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","export const getAllContacts = ({ contacts }) => contacts.items;\n\nexport const getFilteredContact = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  };\n\n  const normalizedFilter = filter.toLowerCase();\n  const result = contacts.items.filter(({ name, phone }) => {\n    return (name.toLowerCase().includes(normalizedFilter) || phone.toLowerCase().includes(normalizedFilter))\n  })\n\n  return result;\n};\n","export const getFilter = ({ filter }) => filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"my-contacts_wrapper__b-SwW\",\"block\":\"my-contacts_block__ETN8q\",\"title\":\"my-contacts_title__CmkMe\",\"message\":\"my-contacts_message__W9jiG\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport MyContactList from '../MyContactList/MyContactList.jsx';\nimport MyContactFilter from '../MycontactFilter/MyContactFilter.jsx';\nimport MyContactForm from '../MyContcatForm/MyContactForm.jsx';\n\nimport { fetchAllContacts, fetchAddContact, fetchDeleteContact } from '../../redux/contacts/contacts-operations';\nimport { setFilter } from '../../redux/filter/filter-slice';\n\nimport { getFilteredContact } from '../../redux/contacts/contacts-selectors';\nimport { getFilter } from '../../redux/filter/filter-selectors';\n\nimport styles from './my-contacts.module.css';\n\nconst MyContacts = () => {\n  const filteredContacts = useSelector(getFilteredContact);\n\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const onAddContact = ({ name, phone }) => {\n    const action = fetchAddContact({ name, phone });\n    dispatch(action);\n  };\n\n  const onDeleteContact = (id) => {\n    const action = fetchDeleteContact(id);\n    dispatch(action);\n  };\n\n  const handlFilter = ({ target }) => {\n    const action = setFilter(target.value);\n    dispatch(action);\n  };\n\n  return (\n    <div>\n      <h3 className={styles.title}>My contacts</h3>\n      <div className={styles.wrapper}>\n        <div className={styles.block}>\n          <h4 className={styles.title}>Name</h4>\n          <MyContactForm onSubmit={onAddContact} />\n        </div>\n        <div className={styles.block}>\n          <h4 className={styles.title}>Contacts</h4>\n          <MyContactFilter value={filter} handlFilter={handlFilter} />\n          <MyContactList deleteContact={onDeleteContact} contacts={filteredContacts} />\n          {!filteredContacts.length && <p className={styles.message}>No contacts in the list</p>}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MyContacts;\n","import MyContacts from '../../components/MyContacts/MyContacts';\n\nconst MyContactsPage = () => {\n  return (\n    <div>\n      <MyContacts />\n    </div>\n  );\n};\n\nexport default MyContactsPage;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["MyContactList","deleteContact","contacts","console","log","items","map","_id","name","phone","className","styles","onClick","defaultProps","prototypes","PropTypes","id","number","MyContactFilter","handlFilter","value","onChange","type","placeholder","pattern","title","required","MyContactForm","onSubmit","useState","state","setState","handlChange","target","prevState","action","e","preventDefault","getFilteredContact","filter","normalizedFilter","toLowerCase","includes","getFilter","filteredContacts","useSelector","dispatch","useDispatch","useEffect","fetchAllContacts","fetchAddContact","setFilter","fetchDeleteContact","length","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}